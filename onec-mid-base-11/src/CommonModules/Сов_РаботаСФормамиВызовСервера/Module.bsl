
#Область ПрограммныйИнтерфейс

Процедура ДополнитьФорму(Форма) Экспорт
	// ++Базовкин / Задача homework-11-2 / 05.04.25
	ИмяФормы = Форма.ИмяФормы;
	
	Если ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
		ДобавитьТаблицуКонтактныеЛицаВСправочникКонтрагенты(Форма);
	ИначеЕсли ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаДокумента" Тогда
		ДобавитьПолеКонтактноеЛицоВГруппаШапкаПраво(Форма);
		ДобавитьПолеСогласованнаяСкидкаВГруппаЯчейкаСуммаДокумента(Форма);
	ИначеЕсли ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокумента" Тогда
		ДобавитьПолеКонтактноеЛицоВГруппаШапкаПраво(Форма);
	ИначеЕсли ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента" Тогда
		ДобавитьПолеКонтактноеЛицоВГруппаШапкаПраво(Форма);
	ИначеЕсли ИмяФормы = "Документ.ОплатаОтПокупателя.Форма.ФормаДокумента" Тогда
		ВставитьПолеКонтактноеЛицоНаФормуПередСуммаДокумента(Форма);
	ИначеЕсли ИмяФормы = "Документ.ОплатаПоставщику.Форма.ФормаДокумента" Тогда
		ВставитьПолеКонтактноеЛицоНаФормуПередСуммаДокумента(Форма);
	КонецЕсли;
    // --Базовкин / Конец изменений.
КонецПроцедуры


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДобавитьТаблицуКонтактныеЛицаВСправочникКонтрагенты(Форма)
	// ++Базовкин / Задача homework-11-2 / 05.04.25
	МассивТиповДинамическогоСписка = Новый Массив;
	МассивТиповДинамическогоСписка.Добавить(Тип("ДинамическийСписок"));
	ОписаниеТиповДинамическогоСписка = Новый ОписаниеТипов(МассивТиповДинамическогоСписка);
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("РеквизитСписокКонтактныхЛиц", ОписаниеТиповДинамическогоСписка,, "Контактные лица", Ложь));
	
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	РеквизитФормыСписокКонтактныхЛиц = Форма.ЭтаФорма["РеквизитСписокКонтактныхЛиц"];
	РеквизитФормыСписокКонтактныхЛиц.ТекстЗапроса = "ВЫБРАТЬ
	                                                |	Сов_КонтактныеЛица.Должность КАК Должность,
	                                                |	Сов_КонтактныеЛица.Наименование КАК ФИО,
	                                                |	Сов_КонтактныеЛица.КонтактныйТелефон КАК КонтактныйТелефон,
	                                                |	Сов_КонтактныеЛица.Владелец КАК Владелец
	                                                |ИЗ
	                                                |	Справочник.Сов_КонтактныеЛица КАК Сов_КонтактныеЛица"; 
	
	РеквизитФормыСписокКонтактныхЛиц.ОсновнаяТаблица = "Справочник.Сов_КонтактныеЛица";
	
	НастройкиОтбора = РеквизитФормыСписокКонтактныхЛиц.КомпоновщикНастроек.ПолучитьНастройки();
	НовЭлементОтбора = РеквизитФормыСписокКонтактныхЛиц.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
	НовЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовЭлементОтбора.Использование = Истина; 
	НовЭлементОтбора.ПравоеЗначение = Форма.Объект.Ссылка; 
	
	РеквизитФормыСписокКонтактныхЛиц.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтбора);
	
	
	// Вывести список на форму
	ЭлементДинамическийСписок = Форма.Элементы.Добавить("ЭлементСписокКонтактныхЛиц", Тип("ТаблицаФормы"));
	ЭлементДинамическийСписок.ПутьКДанным = "РеквизитСписокКонтактныхЛиц";

	// Создать колонки и вывести в список 
	НоваяКолонкаТаблицы = Форма.Элементы.Добавить("КолонкаДолжность", Тип("ПолеФормы"), ЭлементДинамическийСписок);
	НоваяКолонкаТаблицы.ПутьКДанным = "РеквизитСписокКонтактныхЛиц.Должность";
	
	НоваяКолонкаТаблицы = Форма.Элементы.Добавить("КолонкаНаименование", Тип("ПолеФормы"), ЭлементДинамическийСписок);
	НоваяКолонкаТаблицы.ПутьКДанным = "РеквизитСписокКонтактныхЛиц.ФИО";

	НоваяКолонкаТаблицы = Форма.Элементы.Добавить("КолонкаКонтактныйТелефон", Тип("ПолеФормы"), ЭлементДинамическийСписок);
	НоваяКолонкаТаблицы.ПутьКДанным = "РеквизитСписокКонтактныхЛиц.КонтактныйТелефон";
    // --Базовкин / Конец изменений.
КонецПроцедуры

Процедура ДобавитьПолеКонтактноеЛицоВГруппаШапкаПраво(Форма)
	// ++Базовкин / Задача homework-11-2 / 05.04.25
	ПолеВвода = Форма.Элементы.Добавить("КонтактноеЛицо", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапкаПраво);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Сов_КонтактноеЛицо";
    // --Базовкин / Конец изменений.
КонецПроцедуры

Процедура ВставитьПолеКонтактноеЛицоНаФормуПередСуммаДокумента(Форма)
	// ++Базовкин / Задача homework-11-2 / 05.04.25
	ПолеВвода = Форма.Элементы.Вставить("КонтактноеЛицо", Тип("ПолеФормы"),, Форма.Элементы.СуммаДокумента);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Сов_КонтактноеЛицо";
    // --Базовкин / Конец изменений.
КонецПроцедуры

Процедура ДобавитьПолеСогласованнаяСкидкаВГруппаЯчейкаСуммаДокумента(Форма)
	// ++Базовкин / Задача homework-11-2 / 05.04.25
	ПолеВвода = Форма.Элементы.Вставить("СогласованнаяСкидка", Тип("ПолеФормы"), Форма.Элементы.ЯчейкаСуммаДокумента, Форма.Элементы.СуммаДокумента);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Сов_СогласованнаяСкидка";
	
	// Добавить кнопку "Пересчитать"
	КомандаПересчитать = Форма.Команды.Добавить("Сов_Пересчитать");
	КомандаПересчитать.Заголовок = "Пересчитать";
	КомандаПересчитать.Действие = "КомандаПересчитать";
	
	КнопкаКоманды = Форма.Элементы.Вставить("Сов_Пересчитать", Тип("КнопкаФормы"), Форма.Элементы.ЯчейкаСуммаДокумента, Форма.Элементы.СуммаДокумента);
	КнопкаКоманды.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаКоманды.ИмяКоманды = "Сов_Пересчитать";
	// --Базовкин / Конец изменений.
КонецПроцедуры 


#КонецОбласти
